{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/contact.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"../contact-preview/contact-preview.component\";\n\nfunction ContactListComponent_contact_preview_16_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"contact-preview\", 13);\n    i0.ɵɵlistener(\"remove\", function ContactListComponent_contact_preview_16_Template_contact_preview_remove_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onRemove.emit($event);\n    });\n    i0.ɵɵtext(1, \"preview\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const contact_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"contact\", contact_r1);\n  }\n}\n\nexport let ContactListComponent = /*#__PURE__*/(() => {\n  class ContactListComponent {\n    constructor(contactService, route, router) {\n      this.contactService = contactService;\n      this.route = route;\n      this.router = router;\n      this.onRemove = new EventEmitter();\n    }\n\n    ngOnInit() {\n      this.contact = this.contactService.getEmptyContact();\n    }\n\n    onSaveContact() {\n      return __awaiter(this, void 0, void 0, function* () {\n        // const contact = JSON.parse(JSON.stringify(this.contact),\n        yield this.contactService.save(Object.assign({}, this.contact)).toPromise(); // this.contactService.query\n      });\n    }\n\n  }\n\n  ContactListComponent.ɵfac = function ContactListComponent_Factory(t) {\n    return new (t || ContactListComponent)(i0.ɵɵdirectiveInject(i1.ContactService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router));\n  };\n\n  ContactListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ContactListComponent,\n    selectors: [[\"contact-list\"]],\n    inputs: {\n      contacts: \"contacts\"\n    },\n    outputs: {\n      onRemove: \"remove\"\n    },\n    decls: 17,\n    vars: 4,\n    consts: [[1, \"contact-list\"], [1, \"page-title\"], [1, \"add-contact-card\"], [1, \"form-container\"], [3, \"ngSubmit\"], [\"for\", \"name\"], [\"type\", \"text\", \"name\", \"name\", \"id\", \"name\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"phone\"], [\"type\", \"text\", \"name\", \"phone\", \"id\", \"phone\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"email\"], [\"type\", \"text\", \"name\", \"email\", \"id\", \"email\", 3, \"ngModel\", \"ngModelChange\"], [1, \"add-icon\"], [3, \"contact\", \"remove\", 4, \"ngFor\", \"ngForOf\"], [3, \"contact\", \"remove\"]],\n    template: function ContactListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"h1\", 1);\n        i0.ɵɵtext(2, \"Contact List\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2)(4, \"div\", 3)(5, \"form\", 4);\n        i0.ɵɵlistener(\"ngSubmit\", function ContactListComponent_Template_form_ngSubmit_5_listener() {\n          return ctx.onSaveContact();\n        });\n        i0.ɵɵelementStart(6, \"label\", 5);\n        i0.ɵɵtext(7, \"Name \");\n        i0.ɵɵelementStart(8, \"input\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function ContactListComponent_Template_input_ngModelChange_8_listener($event) {\n          return ctx.contact.name = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"label\", 7);\n        i0.ɵɵtext(10, \"Phone \");\n        i0.ɵɵelementStart(11, \"input\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function ContactListComponent_Template_input_ngModelChange_11_listener($event) {\n          return ctx.contact.phone = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(12, \"label\", 9);\n        i0.ɵɵtext(13, \"Email \");\n        i0.ɵɵelementStart(14, \"input\", 10);\n        i0.ɵɵlistener(\"ngModelChange\", function ContactListComponent_Template_input_ngModelChange_14_listener($event) {\n          return ctx.contact.email = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(15, \"button\", 11);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵtemplate(16, ContactListComponent_contact_preview_16_Template, 2, 1, \"contact-preview\", 12);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngModel\", ctx.contact.name);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.contact.phone);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngModel\", ctx.contact.email);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.contacts);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, i4.NgForOf, i5.ContactPreviewComponent],\n    styles: [\".contact-list[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;align-items:center;justify-content:center;width:100%}.contact-list[_ngcontent-%COMP%]   .page-title[_ngcontent-%COMP%]{display:flex;width:100%;align-items:center;justify-content:center;font-family:AvenirHeavy;font-size:3rem}.add-contact-card[_ngcontent-%COMP%]{width:18rem;aspect-ratio:9/15;background-color:#ffffff17;-webkit-backdrop-filter:blur(3px);backdrop-filter:blur(3px);margin:1rem}.add-contact-card[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{height:100%}.add-contact-card[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]{padding:1rem;height:100%}.add-contact-card[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]   label[_ngcontent-%COMP%]{color:#f0f8ff;font-family:AvenirRoman;display:grid;grid-template-columns:1fr auto;place-items:center}.add-contact-card[_ngcontent-%COMP%]   .form-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{background-color:#ffffff17;-webkit-backdrop-filter:blur(3px);backdrop-filter:blur(3px);outline:none;padding:1rem;color:#f0f8ff;margin:1rem}.add-contact-card[_ngcontent-%COMP%]   .add-icon[_ngcontent-%COMP%]{background-color:#ffffff17;-webkit-backdrop-filter:blur(3px);backdrop-filter:blur(3px);aspect-ratio:1/1;color:#f0f8ff;font-size:5rem;width:50%;display:flex;align-items:center;justify-content:center;margin:15% auto auto;border-radius:50%;cursor:pointer;position:relative;border:none}.add-contact-card[_ngcontent-%COMP%]   .add-icon[_ngcontent-%COMP%]:hover{background-color:#fff3}.add-contact-card[_ngcontent-%COMP%]   .add-icon[_ngcontent-%COMP%]:before{content:\\\"+\\\";color:#f0f8ff;font-size:5rem;position:absolute;top:10%}\"],\n    changeDetection: 0\n  });\n  return ContactListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}